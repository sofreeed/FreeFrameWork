//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.template
{
public sealed partial class Base_1 :  Bright.Config.BeanBase 
{
    public Base_1(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        MyBool = _buf.ReadBool();
        MyByte = _buf.ReadByte();
        MyShort = _buf.ReadShort();
        MyInt = _buf.ReadInt();
        MyLong = _buf.ReadLong();
        MyFloat = _buf.ReadFloat();
        MyDouble = _buf.ReadDouble();
        MyString = _buf.ReadString();
        PostInit();
    }

    public static Base_1 DeserializeBase_1(ByteBuf _buf)
    {
        return new template.Base_1(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 描述1
    /// </summary>
    public bool MyBool { get; private set; }
    /// <summary>
    /// 描述2
    /// </summary>
    public byte MyByte { get; private set; }
    /// <summary>
    /// 描述3
    /// </summary>
    public short MyShort { get; private set; }
    /// <summary>
    /// 描述4
    /// </summary>
    public int MyInt { get; private set; }
    /// <summary>
    /// 描述5
    /// </summary>
    public long MyLong { get; private set; }
    /// <summary>
    /// 描述6
    /// </summary>
    public float MyFloat { get; private set; }
    /// <summary>
    /// 描述7
    /// </summary>
    public double MyDouble { get; private set; }
    /// <summary>
    /// 描述8
    /// </summary>
    public string MyString { get; private set; }

    public const int __ID__ = 1109543511;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "MyBool:" + MyBool + ","
        + "MyByte:" + MyByte + ","
        + "MyShort:" + MyShort + ","
        + "MyInt:" + MyInt + ","
        + "MyLong:" + MyLong + ","
        + "MyFloat:" + MyFloat + ","
        + "MyDouble:" + MyDouble + ","
        + "MyString:" + MyString + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}